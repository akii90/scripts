#!/bin/bash

# Search container info with pid in k3s 
# Key command:
# lsof
# cat /proc/$PID/cmdline | tr '\0' ' '; echo
# crictl ps -p
# Other code were generated by AI

# Get specific pid of container process
# In my case, I want to find the pid of container process that use inotify
echo "Searching for container processes using inotify..."
PIDS=$(lsof -u $USER | grep inotify | grep container | awk '{print $2}' | sort)

if [ -z "$PIDS" ]; then
  echo "No container processes found"
  exit 1
fi

echo "Found container processes number: $(echo "$PIDS" | wc -l)"

# set container runtime endpoint
# export CONTAINER_RUNTIME_ENDPOINT=unix:///run/k3s/containerd/containerd.sock

# Initialize associative arrays
declare -A container_names
declare -A container_count
declare -A container_pids

# Temporary file for storing debug information
DEBUG_FILE="/tmp/container_debug_$$.log"
echo "" > $DEBUG_FILE

# Process each pid
for PID in $PIDS; do
  # Get full startup command
  CMDLINE=$(cat /proc/$PID/cmdline 2>/dev/null | tr '\0' ' ')
  echo "PID: $PID, CMDLINE: ${CMDLINE:0:100}..." >> $DEBUG_FILE
  
  # Get container id, this id is actually called "pod id"
  CONTAINER_ID=$(echo "$CMDLINE" | grep -o -E '\-id [a-f0-9]+' | awk '{print $2}')
  
  if [ -z "$CONTAINER_ID" ]; then
    echo "Can not get container id" >> $DEBUG_FILE
    continue
  fi
  
  # Cut id
  SHORT_ID=${CONTAINER_ID:0:10}
  echo "  Full container id: $CONTAINER_ID" >> $DEBUG_FILE
  echo "  Cutted container id: $SHORT_ID" >> $DEBUG_FILE
  
  # Get container info with short id
  CONTAINER_INFO=$(crictl ps -a | grep $SHORT_ID 2>/dev/null)
  
  if [ -z "$CONTAINER_INFO" ]; then
    echo "  Container info not found" >> $DEBUG_FILE
    NAME="Unknown container"
  else
    # Get container name
    NAME=$(echo "$CONTAINER_INFO" | awk '{print $NF}')
    echo "  Found container name: $NAME" >> $DEBUG_FILE
  fi
  
  # Add container name
  container_names[$SHORT_ID]=$NAME
  
  # Add container count
  if [ -n "${container_count[$SHORT_ID]}" ]; then
    container_count[$SHORT_ID]=$((container_count[$SHORT_ID] + 1))
  else
    container_count[$SHORT_ID]=1
  fi
  
  # Add container pid list
  if [ -n "${container_pids[$SHORT_ID]}" ]; then
    container_pids[$SHORT_ID]="${container_pids[$SHORT_ID]},$PID"
  else
    container_pids[$SHORT_ID]=$PID
  fi
done

# Output statistics results
echo -e "\nPID,Container Name,Count"
echo "----------------------"

# Sort and output results
for ID in $(for k in "${!container_count[@]}"; do echo "$k ${container_count[$k]}"; done | sort -rn -k2 | awk '{print $1}'); do
  NAME=${container_names[$ID]}
  COUNT=${container_count[$ID]}
  PIDS=${container_pids[$ID]}
  
  # Simple output
  echo "$PIDS,$NAME,$COUNT"
done

# Output total
TOTAL_CONTAINERS=${#container_names[@]}
TOTAL_PROCESSES=$(echo "$PIDS" | wc -l)
echo -e "\nTotal: $TOTAL_CONTAINERS containers, $TOTAL_PROCESSES processes"
echo "Detailed debug information saved to: $DEBUG_FILE"